class t{static instance=null;static injected=!1;static currentVersion="v2.0.0-optimized";static getInstance(){return this.instance||(this.instance=new t),this.instance}static injectGlobalStyles(){if(this.injected)return;const t=document.createElement("style");t.id="kids-tasks-global-styles-v2",t.setAttribute("data-version",this.currentVersion),t.textContent=this.getOptimizedGlobalStyles(),document.head.appendChild(t),this.injected=!0}static getVariableCount(){return 45}static getOptimizedGlobalStyles(){return`\n      /* === KIDS TASKS V2.0 - OPTIMIZED CSS VARIABLES === */\n      :root {\n        /* === CORE COLORS (6 variables) === */\n        --kt-primary: var(--primary-color, #3f51b5);\n        --kt-secondary: var(--accent-color, #ff4081);\n        --kt-success: #4caf50;\n        --kt-warning: #ff9800;\n        --kt-error: #f44336;\n        --kt-info: #2196f3;\n        \n        /* === STATUS COLORS (4 variables) === */\n        --kt-status-todo: var(--kt-warning);\n        --kt-status-completed: var(--kt-success);\n        --kt-status-pending: var(--kt-info);\n        --kt-status-validated: var(--kt-success);\n        \n        /* === CURRENCY COLORS (2 variables) === */\n        --kt-points-color: var(--kt-success);\n        --kt-coins-color: #9c27b0;\n        \n        /* === LAYOUT SPACING (5 variables - most used) === */\n        --kt-space-xs: 4px;      /* Used 16 times */\n        --kt-space-sm: 8px;      /* Used 19 times */\n        --kt-space-md: 16px;     /* Used 23 times */\n        --kt-space-lg: 24px;     /* Used 16 times */\n        --kt-space-xl: 32px;     /* Used 4 times */\n        \n        /* === BORDER RADIUS (4 variables) === */\n        --kt-radius-sm: 8px;     /* Used 16 times */\n        --kt-radius-md: 12px;    /* Used 11 times */\n        --kt-radius-lg: 16px;    /* Used 4 times */\n        --kt-radius-round: 50%;  /* Used 4 times */\n        \n        /* === TRANSITIONS (2 variables - performance optimized) === */\n        --kt-transition-fast: 0.2s ease;    /* Used 12 times */\n        --kt-transition-medium: 0.3s ease;  /* Used 4 times */\n        \n        /* === SHADOWS (2 variables) === */\n        --kt-shadow-light: rgba(0, 0, 0, 0.1);  /* Used 7 times */\n        --kt-shadow-medium: rgba(0, 0, 0, 0.2); /* Used 2 times */\n        \n        /* === SURFACES (3 variables) === */\n        --kt-surface-variant: var(--secondary-background-color, #fafafa); /* Used 14 times */\n        --kt-surface-primary: var(--card-background-color, white);\n        --kt-border: 1px solid var(--divider-color, #e0e0e0);\n        \n        /* === TYPOGRAPHY (3 variables) === */\n        --kt-font-family: var(--paper-font-body1_-_font-family, 'Roboto', sans-serif);\n        --kt-font-size-sm: 0.85em;\n        --kt-font-size-lg: 1.2em;\n        \n        /* === COMPONENT SPECIFIC (9 variables) === */\n        --kt-avatar-bg: linear-gradient(135deg, #f0f0f0 0%, #e0e0e0 100%);\n        --kt-cosmetic-border: rgba(0,0,0,0.1);\n        --kt-cosmetic-bg: rgba(255,255,255,0.1);\n        --kt-gauge-bg: var(--kt-surface-variant);\n        --kt-gauge-success: linear-gradient(90deg, var(--kt-success) 0%, var(--kt-info) 100%);\n        --kt-gauge-points: var(--kt-success);\n        --kt-gauge-coins: var(--kt-coins-color);\n        --kt-button-hover: rgba(0,0,0,0.1);\n        --kt-overlay: rgba(0,0,0,0.5);\n      }\n\n      /* === OPTIMIZED GLOBAL COMPONENTS === */\n      .kids-tasks-scope {\n        font-family: var(--kt-font-family);\n        --paper-card-background-color: var(--kt-surface-primary);\n      }\n      \n      /* === CORE LAYOUT UTILITIES === */\n      ${this.getCoreLayoutStyles()}\n      \n      /* === COMPONENT STYLES === */\n      ${this.getComponentStyles()}\n      \n      /* === INTERACTION STYLES === */\n      ${this.getInteractionStyles()}\n      \n      /* === RESPONSIVE UTILITIES === */\n      ${this.getResponsiveStyles()}\n    `}static getCoreLayoutStyles(){return"\n      /* Card Containers */\n      .kt-card {\n        background: var(--kt-surface-primary);\n        border-radius: var(--kt-radius-lg);\n        box-shadow: 0 2px 8px var(--kt-shadow-light);\n        overflow: hidden;\n        transition: all var(--kt-transition-fast);\n      }\n      \n      .kt-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 12px var(--kt-shadow-medium);\n      }\n      \n      /* Spacing Utilities */\n      .kt-p-xs { padding: var(--kt-space-xs); }\n      .kt-p-sm { padding: var(--kt-space-sm); }\n      .kt-p-md { padding: var(--kt-space-md); }\n      .kt-p-lg { padding: var(--kt-space-lg); }\n      .kt-p-xl { padding: var(--kt-space-xl); }\n      \n      .kt-m-xs { margin: var(--kt-space-xs); }\n      .kt-m-sm { margin: var(--kt-space-sm); }\n      .kt-m-md { margin: var(--kt-space-md); }\n      .kt-m-lg { margin: var(--kt-space-lg); }\n      .kt-m-xl { margin: var(--kt-space-xl); }\n      \n      /* Flex Utilities */\n      .kt-flex { display: flex; }\n      .kt-flex-col { flex-direction: column; }\n      .kt-flex-center { align-items: center; justify-content: center; }\n      .kt-flex-between { justify-content: space-between; }\n      .kt-flex-wrap { flex-wrap: wrap; }\n      .kt-gap-xs { gap: var(--kt-space-xs); }\n      .kt-gap-sm { gap: var(--kt-space-sm); }\n      .kt-gap-md { gap: var(--kt-space-md); }\n      .kt-gap-lg { gap: var(--kt-space-lg); }\n    "}static getComponentStyles(){return"\n      /* Avatar Components */\n      .kt-avatar {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: var(--kt-radius-round);\n        background: var(--kt-avatar-bg);\n        border: 2px solid var(--kt-cosmetic-bg);\n        transition: all var(--kt-transition-fast);\n        font-size: 3em;\n      }\n      \n      .kt-avatar--sm { font-size: 1.5em; }\n      .kt-avatar--lg { font-size: 4em; }\n      .kt-avatar--xl { font-size: 6em; }\n      \n      .kt-avatar img {\n        width: 2em;\n        height: 2em;\n        border-radius: var(--kt-radius-round) !important;\n        object-fit: cover !important;\n        border: 2px solid var(--kt-cosmetic-bg);\n        box-shadow: 0 2px 4px var(--kt-shadow-light);\n      }\n      \n      /* Button Components */\n      .kt-btn {\n        border: none;\n        padding: var(--kt-space-sm) var(--kt-space-md);\n        border-radius: var(--kt-radius-sm);\n        cursor: pointer;\n        font-weight: 600;\n        font-size: 0.9em;\n        transition: all var(--kt-transition-fast);\n        display: inline-flex;\n        align-items: center;\n        gap: var(--kt-space-xs);\n      }\n      \n      .kt-btn--primary {\n        background: var(--kt-primary);\n        color: white;\n      }\n      \n      .kt-btn--secondary {\n        background: var(--kt-surface-variant);\n        color: var(--primary-text-color);\n        border: 2px solid transparent;\n      }\n      \n      .kt-btn--success {\n        background: var(--kt-success);\n        color: white;\n      }\n      \n      .kt-btn--error {\n        background: var(--kt-error);\n        color: white;\n      }\n      \n      .kt-btn:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 2px 4px var(--kt-shadow-light);\n      }\n      \n      .kt-btn:active {\n        transform: translateY(0);\n      }\n      \n      /* Status Components */\n      .kt-status {\n        padding: 2px var(--kt-space-xs);\n        border-radius: var(--kt-radius-sm);\n        font-weight: 600;\n        font-size: var(--kt-font-size-sm);\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n      }\n      \n      .kt-status--todo { background: var(--kt-status-todo); color: white; }\n      .kt-status--completed { background: var(--kt-status-completed); color: white; }\n      .kt-status--pending { background: var(--kt-status-pending); color: white; }\n      .kt-status--validated { background: var(--kt-status-validated); color: white; }\n      \n      /* Gauge Components */\n      .kt-gauge {\n        margin-bottom: var(--kt-space-md);\n      }\n      \n      .kt-gauge__header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: var(--kt-space-xs);\n      }\n      \n      .kt-gauge__label {\n        font-weight: 600;\n        color: var(--primary-text-color);\n        font-size: var(--kt-font-size-sm);\n      }\n      \n      .kt-gauge__value {\n        font-weight: 700;\n        color: var(--kt-primary);\n      }\n      \n      .kt-gauge__bar {\n        height: 8px;\n        background: var(--kt-gauge-bg);\n        border-radius: var(--kt-radius-sm);\n        overflow: hidden;\n      }\n      \n      .kt-gauge__fill {\n        height: 100%;\n        transition: width var(--kt-transition-medium);\n        border-radius: var(--kt-radius-sm);\n      }\n      \n      .kt-gauge__fill--tasks { background: var(--kt-gauge-success); }\n      .kt-gauge__fill--points { background: var(--kt-gauge-points); }\n      .kt-gauge__fill--coins { background: var(--kt-gauge-coins); }\n      \n      /* Stats Components */\n      .kt-stat {\n        background: var(--kt-primary);\n        color: white;\n        padding: 4px var(--kt-space-sm);\n        border-radius: var(--kt-radius-sm);\n        font-size: var(--kt-font-size-sm);\n        font-weight: 600;\n        white-space: nowrap;\n      }\n      \n      .kt-stat--points { background: var(--kt-points-color); }\n      .kt-stat--coins { background: var(--kt-coins-color); }\n      .kt-stat--success { background: var(--kt-success); }\n      .kt-stat--warning { background: var(--kt-warning); }\n      \n      /* Empty State Components */\n      .kt-empty {\n        text-align: center;\n        padding: var(--kt-space-xl);\n        color: var(--secondary-text-color);\n      }\n      \n      .kt-empty__icon {\n        font-size: 3em;\n        margin-bottom: var(--kt-space-md);\n        opacity: 0.6;\n      }\n      \n      .kt-empty__text {\n        font-weight: 600;\n        margin-bottom: var(--kt-space-xs);\n      }\n      \n      .kt-empty__subtext {\n        font-size: var(--kt-font-size-sm);\n        opacity: 0.8;\n      }\n    "}static getInteractionStyles(){return"\n      /* Clickable Elements */\n      .kt-clickable {\n        cursor: pointer;\n        transition: all var(--kt-transition-fast);\n      }\n      \n      .kt-clickable:hover {\n        background: var(--kt-button-hover);\n        transform: translateY(-1px);\n        box-shadow: 0 2px 8px var(--kt-shadow-light);\n      }\n      \n      .kt-clickable:active {\n        transform: translateY(0);\n        box-shadow: 0 1px 4px var(--kt-shadow-light);\n      }\n      \n      /* Loading States */\n      .kt-loading {\n        text-align: center;\n        padding: var(--kt-space-xl);\n        color: var(--secondary-text-color);\n      }\n      \n      /* Error States */\n      .kt-error {\n        background: var(--kt-error);\n        color: white;\n        padding: var(--kt-space-md);\n        border-radius: var(--kt-radius-md);\n        text-align: center;\n      }\n      \n      /* Focus States */\n      .kt-focusable:focus {\n        outline: 2px solid var(--kt-primary);\n        outline-offset: 2px;\n      }\n      \n      /* Animation States */\n      @keyframes kt-fade-in {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      \n      @keyframes kt-slide-up {\n        from { transform: translateY(100%); opacity: 0; }\n        to { transform: translateY(0); opacity: 1; }\n      }\n      \n      .kt-fade-in {\n        animation: kt-fade-in var(--kt-transition-medium) ease;\n      }\n      \n      .kt-slide-up {\n        animation: kt-slide-up var(--kt-transition-medium) ease;\n      }\n    "}static getResponsiveStyles(){return"\n      /* === RESPONSIVE DESIGN === */\n      \n      /* Mobile First Approach */\n      @media (max-width: 480px) {\n        :root {\n          --kt-space-xs: 2px;\n          --kt-space-sm: 4px;\n          --kt-space-md: 8px;\n          --kt-space-lg: 16px;\n          --kt-space-xl: 24px;\n        }\n        \n        .kt-card {\n          margin: var(--kt-space-sm);\n        }\n        \n        .kt-avatar {\n          font-size: 2em;\n        }\n        \n        .kt-btn {\n          padding: var(--kt-space-xs) var(--kt-space-sm);\n          font-size: 0.8em;\n        }\n        \n        .kt-flex {\n          flex-direction: column;\n        }\n        \n        .kt-flex--mobile-row {\n          flex-direction: row;\n        }\n        \n        .kt-gap-md {\n          gap: var(--kt-space-sm);\n        }\n      }\n      \n      /* Tablet */\n      @media (min-width: 481px) and (max-width: 768px) {\n        .kt-grid-auto {\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n      \n      /* Desktop */\n      @media (min-width: 769px) {\n        .kt-grid-auto {\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n        }\n        \n        .kt-card:hover {\n          transform: translateY(-3px);\n          box-shadow: 0 6px 16px var(--kt-shadow-medium);\n        }\n      }\n      \n      /* Large Desktop */\n      @media (min-width: 1200px) {\n        .kt-container {\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n        \n        .kt-grid-auto {\n          grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\n        }\n      }\n      \n      /* Reduced Motion */\n      @media (prefers-reduced-motion: reduce) {\n        * {\n          animation-duration: 0.01ms !important;\n          animation-iteration-count: 1 !important;\n          transition-duration: 0.01ms !important;\n        }\n        \n        .kt-card:hover {\n          transform: none;\n        }\n        \n        .kt-clickable:hover {\n          transform: none;\n        }\n        \n        .kt-btn:hover {\n          transform: none;\n        }\n      }\n      \n      /* High Contrast */\n      @media (prefers-contrast: high) {\n        :root {\n          --kt-shadow-light: rgba(0, 0, 0, 0.3);\n          --kt-shadow-medium: rgba(0, 0, 0, 0.5);\n          --kt-border: 2px solid var(--primary-text-color);\n        }\n        \n        .kt-btn {\n          border: 2px solid currentColor;\n        }\n        \n        .kt-status {\n          border: 1px solid var(--primary-text-color);\n        }\n      }\n      \n      /* Dark Mode Support */\n      @media (prefers-color-scheme: dark) {\n        :root {\n          --kt-surface-variant: var(--secondary-background-color, #2c2c2c);\n          --kt-avatar-bg: linear-gradient(135deg, #3a3a3a 0%, #2a2a2a 100%);\n          --kt-gauge-bg: var(--kt-surface-variant);\n          --kt-shadow-light: rgba(0, 0, 0, 0.3);\n          --kt-shadow-medium: rgba(0, 0, 0, 0.5);\n        }\n      }\n    "}static removeGlobalStyles(){const t=document.querySelector("#kids-tasks-global-styles-v2");t&&(t.remove(),this.injected=!1)}static isVariableUsed(t){return{"--kt-space-md":23,"--kt-space-sm":19,"--kt-space-xs":16,"--kt-space-lg":16,"--kt-radius-sm":16,"--kt-surface-variant":14,"--kt-success":14,"--kt-primary":13,"--kt-transition-fast":12,"--kt-radius-md":11,"--kt-error":9,"--kt-shadow-light":7,"--kt-info":7,"--kt-warning":4,"--kt-transition-medium":4,"--kt-space-xl":4,"--kt-radius-round":4,"--kt-radius-lg":4}[t]||0}static getPreCalculatedValues(){return{spacingScale:{xs:"4px",sm:"8px",md:"16px",lg:"24px",xl:"32px"},radiusScale:{sm:"8px",md:"12px",lg:"16px",round:"50%"},colorPalette:{primary:"#3f51b5",success:"#4caf50",warning:"#ff9800",error:"#f44336",info:"#2196f3",coins:"#9c27b0"}}}}window.KidsTasksStyleManagerV2=t;class e{static renderIcon(t){if(!t||""===t)return"📋";try{if("string"==typeof t&&(t.startsWith("http://")||t.startsWith("https://")))return`<img src="${t}" class="icon-image" style="width: 1.2em; height: 1.2em; object-fit: cover; border-radius: 3px;" onerror="this.style.display='none'; this.insertAdjacentText('afterend', '📋');">`;if("string"==typeof t&&t.startsWith("mdi:"))return`<ha-icon icon="${t}" style="width: 1.2em; height: 1.2em;"></ha-icon>`;return t.toString()||"📋"}catch(t){return"📋"}}static emptySection(t,e,n){return`\n      <div class="empty-state">\n        <div class="empty-icon">${t}</div>\n        <div class="empty-text">${e}</div>\n        <div class="empty-subtext">${n}</div>\n      </div>\n    `}static getCategoryIcon(t,e={},n={}){if("object"==typeof t&&null!==t){if(t.icon)return this.renderIcon(t.icon);t=t.category}if(t&&e){const n=t.toLowerCase();if(e[n])return this.renderIcon(e[n])}if(t&&n){const e=t.toLowerCase();if(n[e])return this.renderIcon(n[e])}return this.renderIcon("📋")}static generateCosmeticDataFromName(t){if(!t)return null;const e=t.toLowerCase();return e.includes("avatar")||e.includes("personnage")?{type:"avatar",catalog_data:{emoji:"👤",default_avatar:!0}}:e.includes("fond")||e.includes("background")||e.includes("thème")?{type:"background",catalog_data:{css_gradient:"var(--kt-gradient-neutral)"}}:e.includes("tenue")||e.includes("outfit")||e.includes("vêtement")?{type:"outfit",catalog_data:{emoji:"👔",default_outfit:!0}}:null}static getTasksStatsForGauges(t,e,n){const s=t.filter(t=>"todo"===t.status&&n&&n(t)),a=s.length,r=e||0;return{completedToday:r,totalTasksToday:a,progressPercent:a>0?Math.round(r/a*100):0,activeTasks:s}}static formatDate(t){if(!t)return"";try{const e=new Date(t),n=new Date,s=new Date(n.getFullYear(),n.getMonth(),n.getDate()),a=new Date(e.getFullYear(),e.getMonth(),e.getDate())-s,r=Math.ceil(a/864e5);return 0===r?"Aujourd'hui":-1===r?"Hier":1===r?"Demain":r>1&&r<=7?`Dans ${r} jours`:r<-1&&r>=-7?`Il y a ${Math.abs(r)} jours`:e.toLocaleDateString("fr-FR",{day:"2-digit",month:"2-digit",year:"2-digit"})}catch(t){return""}}static formatPoints(t){return t&&0!==t?t>0?`+${t}`:t.toString():"0"}static getCurrencyClass(t){return t.cost>0&&t.coin_cost>0?"dual-currency":t.coin_cost>0?"coins-only":"points-only"}static detectMobileDevice(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||navigator.maxTouchPoints&&navigator.maxTouchPoints>2}static debounce(t,e){let n;return function(...s){clearTimeout(n),n=setTimeout(()=>{clearTimeout(n),t(...s)},e)}}static throttle(t,e){let n;return function(...s){n||(t.apply(this,s),n=!0,setTimeout(()=>n=!1,e))}}static deepClone(t){if(null===t||"object"!=typeof t)return t;if(t instanceof Date)return new Date(t.getTime());if(t instanceof Array)return t.map(t=>this.deepClone(t));if("object"==typeof t){const e={};for(const n in t)t.hasOwnProperty(n)&&(e[n]=this.deepClone(t[n]));return e}}static safeGet(t,e,n=null){const s=e.split(".");let a=t;for(const t of s){if(null==a||!a.hasOwnProperty(t))return n;a=a[t]}return a}static isValidChild(t){return t&&"object"==typeof t&&t.id&&t.name}static isValidTask(t){return t&&"object"==typeof t&&t.id&&t.name&&t.status}static isValidReward(t){return t&&"object"==typeof t&&t.id&&t.name&&(t.cost>0||t.coin_cost>0)}static safeExecute(t,e=null,n="Unknown"){try{return t()}catch(t){return e}}}class n{constructor(){this.metrics={renderTimes:[],domUpdates:[],eventHandlers:[],memoryUsage:[],componentCounts:{}},this.observers={mutation:null,performance:null,resize:null},this.isEnabled="true"===localStorage.getItem("kt-debug-performance"),this.startTime=performance.now(),this.isEnabled&&this.initializeMonitoring()}initializeMonitoring(){this.setupMutationObserver(),this.setupPerformanceObserver(),this.setupMemoryMonitoring()}trackRender(t,e,n){if(!this.isEnabled)return;const s=n-e;this.metrics.renderTimes.push({component:t,duration:s,timestamp:Date.now()}),this.metrics.renderTimes.length>100&&this.metrics.renderTimes.shift()}trackDOMUpdate(t,e=1){this.isEnabled&&(this.metrics.domUpdates.push({operation:t,elementCount:e,timestamp:Date.now()}),this.metrics.domUpdates.length>50&&this.metrics.domUpdates.shift())}trackEventHandler(t,e,n="add"){this.isEnabled&&(this.metrics.eventHandlers.push({event:t,component:e,action:n,timestamp:Date.now()}),this.metrics.componentCounts[e]||(this.metrics.componentCounts[e]={events:0}),this.metrics.componentCounts[e].events+="add"===n?1:-1)}setupMutationObserver(){"undefined"!=typeof MutationObserver&&(this.observers.mutation=new MutationObserver(t=>{let e=0;t.forEach(t=>{e+=t.addedNodes.length+t.removedNodes.length}),e>0&&this.trackDOMUpdate("mutation",e)}),this.observers.mutation.observe(document.body,{childList:!0,subtree:!0,attributes:!1}))}setupPerformanceObserver(){if("undefined"!=typeof PerformanceObserver)try{this.observers.performance=new PerformanceObserver(t=>{t.getEntries().forEach(t=>{"longtask"===t.entryType&&t.duration})}),this.observers.performance.observe({entryTypes:["longtask"]})}catch(t){}}setupMemoryMonitoring(){if(!performance.memory)return;const t=()=>{this.isEnabled&&(this.metrics.memoryUsage.push({used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit,timestamp:Date.now()}),this.metrics.memoryUsage.length>20&&this.metrics.memoryUsage.shift())};setInterval(t,1e4),t()}wrapRender(t,e){return this.isEnabled?function(...n){const s=performance.now(),a=e.apply(this,n),r=performance.now();return window.KidsTasksPerformanceMonitor?.trackRender(t.constructor.name,s,r),a}:e}generateReport(){if(!this.isEnabled)return null;const t=Date.now(),e=t-3e5,n=this.metrics.renderTimes.filter(t=>t.timestamp>e),s=this.metrics.domUpdates.filter(t=>t.timestamp>e),a=this.metrics.memoryUsage.slice(-5),r=n.length>0?n.reduce((t,e)=>t+e.duration,0)/n.length:0,i=a.length>1?a[a.length-1].used-a[0].used:0;return{summary:{uptime:Math.round((t-this.startTime)/1e3),avgRenderTime:Math.round(100*r)/100,totalRenders:n.length,domUpdates:s.length,memoryTrend:Math.round(i/1024),activeComponents:Object.keys(this.metrics.componentCounts).length},details:{slowRenders:n.filter(t=>t.duration>16),componentBreakdown:this.metrics.componentCounts,memoryUsage:a}}}startProfile(t){return this.isEnabled?{name:t,startTime:performance.now()}:null}endProfile(t){if(!this.isEnabled||!t)return;return performance.now()-t.startTime}toggle(t=!this.isEnabled){this.isEnabled=t,localStorage.setItem("kt-debug-performance",t.toString()),t&&!this.observers.mutation&&this.initializeMonitoring()}destroy(){this.observers.mutation&&this.observers.mutation.disconnect(),this.observers.performance&&this.observers.performance.disconnect(),this.metrics={renderTimes:[],domUpdates:[],eventHandlers:[],memoryUsage:[],componentCounts:{}}}}let s;"undefined"!=typeof window&&(s=new n,window.KidsTasksPerformanceMonitor=s);var a=s;const r=new class{constructor(){this.isDevelopment=!1,this.isDebugEnabled=this.isDevelopment||"true"===localStorage.getItem("kt-debug"),this.logLevels={error:0,warn:1,info:2,debug:3},this.currentLevel=this.isDevelopment?3:1}error(t,...e){this.currentLevel,this.logLevels.error}warn(t,...e){this.currentLevel,this.logLevels.warn}info(t,...e){this.currentLevel,this.logLevels.info}debug(t,...e){this.currentLevel>=this.logLevels.debug&&this.isDebugEnabled}perf(t,e,n){this.isDebugEnabled&&void 0!==n&&this.debug(`⏱️ ${t}.${e}: ${n.toFixed(2)}ms`)}group(t,e){if(this.isDebugEnabled)try{e()}finally{}else e()}toggleDebug(){this.isDebugEnabled=!this.isDebugEnabled,localStorage.setItem("kt-debug",this.isDebugEnabled.toString()),this.info("Debug mode "+(this.isDebugEnabled?"enabled":"disabled"))}setLevel(t){t in this.logLevels&&(this.currentLevel=this.logLevels[t],this.info(`Log level set to: ${t}`))}};class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._initialized=!1,this._lastRenderState=null,this._renderDebounceTimer=null,this._isRendering=!1,this._pendingRender=!1,this._touchStates=new WeakMap,this._touchControllers=new Map,this._isMobile=this._detectMobileDevice(),"undefined"!=typeof KidsTasksStyleManager&&KidsTasksStyleManager.injectGlobalStyles(),a&&a.trackEventHandler("constructor",this.constructor.name,"add")}set hass(t){const e=this._hass;this._hass=t,!this._initialized&&t?(this._initialized=!0,this.shadowRoot.addEventListener("click",this.handleClick.bind(this)),this.initTouchInteractions(),this.smartRender()):t&&this.shouldUpdate(e,t)&&(this.smartRender(),this._initialized&&this.initTouchInteractions())}smartRender(t=!1){!this._isRendering||t?(this._renderDebounceTimer&&clearTimeout(this._renderDebounceTimer),this._renderDebounceTimer=setTimeout(()=>{this._performRender(t)},t?0:16)):this._pendingRender=!0}_performRender(t=!1){if(this._isRendering)return;const e=performance.now();this._isRendering=!0;try{if(!t&&!this._needsRender())return;this.render(),this._updateRenderState(),this._pendingRender&&(this._pendingRender=!1,setTimeout(()=>this.smartRender(),0))}catch(t){r.error("Render error in",this.constructor.name,t),this._handleRenderError(t)}finally{if(this._isRendering=!1,a){const t=performance.now();a.trackRender(this.constructor.name,e,t)}}}_needsRender(){const t=this._getCurrentRenderState();return!this._lastRenderState||JSON.stringify(t)!==JSON.stringify(this._lastRenderState)}_getCurrentRenderState(){return{hasHass:!!this._hass,entityCount:this._hass?Object.keys(this._hass.states||{}).length:0,configHash:this.config?JSON.stringify(this.config).slice(0,100):null,timestamp:Math.floor(Date.now()/1e3)}}_updateRenderState(){this._lastRenderState=this._getCurrentRenderState()}_handleRenderError(t){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n        <div style="padding: 16px; background: #fee; border: 1px solid #fcc; border-radius: 4px;">\n          <h3 style="color: #c33; margin: 0 0 8px 0;">Card Error</h3>\n          <p style="margin: 0; font-size: 14px;">${t.message}</p>\n          <button onclick="this.closest('kids-tasks-card, kids-tasks-child-card').smartRender(true)" \n                  style="margin-top: 8px; padding: 4px 8px; background: #c33; color: white; border: none; border-radius: 2px; cursor: pointer;">\n            Retry\n          </button>\n        </div>\n      `)}handleClick(t){const e=t.target.closest("[data-action]");if(!e)return void this._hideAllDeleteConfirmations();if(e.closest(".long-pressing"))return;const n=this._touchStates.get(e.closest(".kt-long-press-item"));if(n&&n.isActive)return;const s=e.closest(".kt-swipeable-item");if(s&&(s.classList.contains("swiping-left")||s.classList.contains("swiping-right")))return;e.classList.contains("kt-confirm-delete")||e.classList.contains("kt-cancel-delete")||this._hideAllDeleteConfirmations(),t.preventDefault(),t.stopPropagation();const a=e.dataset.action,r=e.dataset.id;"filter-rewards"===a||"filter-children"===a||"filter-tasks"===a?this.handleAction(a,e.dataset.filter,t):this.handleAction(a,r,t)}_detectMobileDevice(){return void 0!==e?e.detectMobileDevice():"ontouchstart"in window||navigator.maxTouchPoints>0}initTouchInteractions(){this._cleanupTouchInteractions(),this._initLongPressSystem(),this.addSwipeListeners()}_cleanupTouchInteractions(){for(const t of this._touchControllers.values())t.abort(),a&&a.trackEventHandler("touch",this.constructor.name,"remove");this._touchControllers.clear(),this._touchStates=new WeakMap,this._longPressListenersAdded=!1,this._swipeListenersAdded=!1,this._renderDebounceTimer&&(clearTimeout(this._renderDebounceTimer),this._renderDebounceTimer=null)}disconnectedCallback(){this._cleanupTouchInteractions(),this._cleanupTimers&&this._cleanupTimers(),a&&a.trackEventHandler("disconnect",this.constructor.name,"remove")}_setupEventDelegation(){if(this._eventDelegationSetup)return;this.shadowRoot.addEventListener("click",t=>{t.target.closest("[data-action]")&&this.handleClick(t)},{passive:!1,capture:!1}),a&&a.trackEventHandler("delegation",this.constructor.name,"add"),this._eventDelegationSetup=!0}_initLongPressSystem(){if(this._longPressListenersAdded)return;this._longPressListenersAdded=!0;const t=new AbortController;this._touchControllers.set("longpress",t);const e=t.signal,n=this._isMobile?{down:"touchstart",up:"touchend",move:"touchmove"}:{down:"pointerdown",up:"pointerup",move:"pointermove"};this.shadowRoot.addEventListener(n.down,t=>{const e=t.target.closest(".kt-long-press-item");if(!e||e.querySelector(".kt-delete-confirmation:not(.hidden)"))return;const n=t.clientX||t.touches&&t.touches[0].clientX,s=t.clientY||t.touches&&t.touches[0].clientY;if(!n||!s)return;const a={timer:null,startX:n,startY:s,isActive:!0,element:e},r=this._touchStates.get(e);r&&r.timer&&clearTimeout(r.timer),a.timer=setTimeout(()=>{a.isActive&&this._touchStates.get(e)===a&&(e.classList.add("long-pressing"),this.showDeleteConfirmation(e),navigator.vibrate&&navigator.vibrate(50))},500),this._touchStates.set(e,a)},{signal:e}),this.shadowRoot.addEventListener(n.up,t=>{const e=t.target.closest(".kt-long-press-item");if(!e)return;const n=this._touchStates.get(e);n&&(n.timer&&clearTimeout(n.timer),n.isActive=!1,this._touchStates.delete(e))},{signal:e}),this.shadowRoot.addEventListener(n.move,t=>{const e=t.target.closest(".kt-long-press-item");if(!e)return;const n=this._touchStates.get(e);if(!n||!n.isActive)return;const s=t.clientX||t.touches&&t.touches[0].clientX,a=t.clientY||t.touches&&t.touches[0].clientY;if(s&&a){const t=Math.abs(s-n.startX),r=Math.abs(a-n.startY);Math.sqrt(t*t+r*r)>8&&(n.timer&&clearTimeout(n.timer),n.isActive=!1,this._touchStates.delete(e))}},{signal:e})}showDeleteConfirmation(t){this._hideAllDeleteConfirmations(t);const e=t.querySelector(".kt-delete-confirmation");if(e){e.classList.remove("hidden");const n=e.querySelector(".kt-confirm-delete"),s=e.querySelector(".kt-cancel-delete");n&&(n.onclick=()=>{const e=t.dataset.deleteAction,n=t.dataset.id;e&&n&&this.handleAction(e,n),this.hideDeleteConfirmation(t)}),s&&(s.onclick=e=>{e.preventDefault(),e.stopPropagation(),this.hideDeleteConfirmation(t)}),setTimeout(()=>{this.hideDeleteConfirmation(t)},3e3)}}hideDeleteConfirmation(t){const e=t.querySelector(".kt-delete-confirmation");e&&e.classList.add("hidden"),t.classList.remove("long-pressing");const n=this._touchStates.get(t);n&&(n.timer&&clearTimeout(n.timer),n.isActive=!1,this._touchStates.delete(t)),t.style.pointerEvents="none",setTimeout(()=>{t.style.pointerEvents=""},200)}_hideAllDeleteConfirmations(t=null){this.shadowRoot.querySelectorAll(".kt-delete-confirmation:not(.hidden)").forEach(e=>{const n=e.closest(".kt-long-press-item");n&&n!==t&&this.hideDeleteConfirmation(n)})}addSwipeListeners(){if(this._swipeListenersAdded)return;this._swipeListenersAdded=!0;const t=new AbortController;this._touchControllers.set("swipe",t);const e=t.signal;let n=0,s=0,a=0,r=0,i=!1,o=null;this.shadowRoot.addEventListener("touchstart",t=>{const e=t.target.closest(".kt-swipeable-item");e&&(o=e,i=!0,n=t.touches[0].clientX,s=t.touches[0].clientY,a=n,r=s)},{signal:e,passive:!0}),this.shadowRoot.addEventListener("touchmove",t=>{if(!i||!o)return;t.preventDefault(),a=t.touches[0].clientX,r=t.touches[0].clientY;const e=a-n,d=r-s;if(Math.abs(d)>Math.abs(e))return i=!1,void(o=null);Math.abs(e)>30&&(e>0?(o.classList.add("swiping-right"),o.classList.remove("swiping-left")):(o.classList.add("swiping-left"),o.classList.remove("swiping-right")))},{signal:e,passive:!1}),this.shadowRoot.addEventListener("touchend",t=>{if(!i||!o)return;const e=a-n;Math.abs(e)>80&&(e>0?this.handleSwipeRight(o):this.handleSwipeLeft(o)),setTimeout(()=>{o&&o.classList.remove("swiping-left","swiping-right")},300),i=!1,o=null},{signal:e,passive:!0})}handleSwipeLeft(t){}handleSwipeRight(t){}emptySection(t,n,s){return void 0!==e?e.emptySection(t,n,s):`\n          <div class="empty-state">\n            <div class="empty-icon">${t}</div>\n            <div class="empty-text">${n}</div>\n            <div class="empty-subtext">${s}</div>\n          </div>\n        `}renderIcon(t){return void 0!==e?e.renderIcon(t):t||"📋"}getCategoryIcon(t){return void 0!==e?e.getCategoryIcon(t,this.getDynamicIcons?.()||{},this.getRewardIcons?.()||{}):this.renderIcon("📋")}renderGauges(t,e=!1,n,s){if(!t)return"";const a=void 0!==n?n:t.completedToday||0,r=void 0!==s?s:t.totalTasksToday||0,i=(t,e,n,s)=>`\n        <div class="gauge">\n          <div class="gauge-header">\n            <span class="gauge-label">${t}</span>\n            <span class="gauge-value">${e}</span>\n          </div>\n          <div class="gauge-bar">\n            <div class="gauge-fill ${n}" style="width: ${s}%"></div>\n          </div>\n        </div>\n      `,o=i("Tâches du jour",`${a}/${r}`,"tasks-fill",r>0?Math.round(a/r*100):0);if(!e)return o;const d=t.points||0,c=t.coins||0;return`\n      <div class="gauges-container">\n        ${o}\n        ${i("Points",`${d} 🎫`,"points-fill",Math.min(100,d))}\n        ${i("Pièces",`${c} 🪙`,"coins-fill",Math.min(100,2*c))}\n      </div>\n    `}shouldUpdate(t,e){throw new Error("shouldUpdate must be implemented by subclass")}render(){throw new Error("render must be implemented by subclass")}handleAction(t,e,n){throw new Error("handleAction must be implemented by subclass")}getChildren(){return[]}getTasks(){return[]}getRewards(){return[]}getDynamicIcons(){return{}}getRewardIcons(){return{}}}class o extends i{constructor(){super(),this.currentView="dashboard"}setConfig(t){this.config={title:"Kids Tasks Manager",show_navigation:!0,show_completed:!1,show_rewards:!0,mode:"dashboard",...t}}shouldUpdate(t,e){if(!t)return!0;const n=Object.keys(t.states).filter(t=>t.startsWith("sensor.kidtasks_")),s=Object.keys(e.states).filter(t=>t.startsWith("sensor.kidtasks_"));return n.length!==s.length}render(){if(!this._hass)return void(this.shadowRoot.innerHTML='<div class="kt-loading">Chargement...</div>');const t=this.getChildren();this.shadowRoot.innerHTML=`\n      ${this.getOptimizedStyles()}\n      <div class="card-content kids-tasks-scope">\n        <div class="card-header kt-p-lg">\n          <h2 class="card-title">${this.config.title}</h2>\n          ${this.config.show_navigation?this.renderNavigation():""}\n        </div>\n\n        <div class="main-content kt-p-lg">\n          ${this.renderCurrentView(t)}\n        </div>\n      </div>\n    `}getOptimizedStyles(){return"\n      <style>\n        :host {\n          display: block;\n          background: var(--kt-surface-primary);\n          border-radius: var(--kt-radius-lg);\n          box-shadow: 0 2px 8px var(--kt-shadow-light);\n          overflow: hidden;\n        }\n\n        .card-content {\n          min-height: 200px;\n        }\n\n        .card-header {\n          border-bottom: 2px solid var(--kt-surface-variant);\n          margin-bottom: var(--kt-space-lg);\n        }\n\n        .card-title {\n          font-size: var(--kt-font-size-lg);\n          font-weight: 700;\n          color: var(--primary-text-color);\n          margin: 0 0 var(--kt-space-sm) 0;\n        }\n\n        .navigation {\n          display: flex;\n          gap: var(--kt-space-sm);\n          flex-wrap: wrap;\n        }\n\n        .nav-button {\n          background: var(--kt-surface-variant);\n          border: 2px solid transparent;\n          padding: var(--kt-space-xs) var(--kt-space-md);\n          border-radius: var(--kt-radius-sm);\n          cursor: pointer;\n          font-weight: 600;\n          font-size: 0.9em;\n          transition: all var(--kt-transition-fast);\n          color: var(--primary-text-color);\n        }\n\n        .nav-button.active {\n          border-color: var(--kt-primary);\n          background: var(--kt-primary);\n          color: white;\n        }\n\n        .nav-button:hover {\n          transform: translateY(-1px);\n          box-shadow: 0 2px 4px var(--kt-shadow-light);\n        }\n\n        /* Grid system using CSS custom properties */\n        .children-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n          gap: var(--kt-space-lg);\n        }\n\n        .child-card {\n          background: var(--kt-surface-variant);\n          border-radius: var(--kt-radius-md);\n          padding: var(--kt-space-lg);\n          transition: all var(--kt-transition-fast);\n          cursor: pointer;\n        }\n\n        .child-card:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 12px var(--kt-shadow-medium);\n        }\n\n        .child-header {\n          text-align: center;\n          margin-bottom: var(--kt-space-md);\n        }\n\n        .child-avatar {\n          font-size: 3em;\n          margin-bottom: var(--kt-space-sm);\n        }\n\n        .child-name {\n          font-size: 1.2em;\n          font-weight: 600;\n          color: var(--primary-text-color);\n          margin-bottom: var(--kt-space-xs);\n        }\n\n        .child-stats {\n          display: flex;\n          gap: var(--kt-space-sm);\n          justify-content: center;\n          flex-wrap: wrap;\n          margin-bottom: var(--kt-space-md);\n        }\n\n        .child-progress {\n          font-size: 0.9em;\n          color: var(--secondary-text-color);\n          text-align: center;\n          margin-bottom: var(--kt-space-md);\n        }\n\n        .progress-bar {\n          height: 4px;\n          background: var(--kt-gauge-bg);\n          border-radius: var(--kt-radius-sm);\n          overflow: hidden;\n          margin-top: var(--kt-space-xs);\n        }\n\n        .progress-fill {\n          height: 100%;\n          background: var(--kt-gauge-success);\n          transition: width var(--kt-transition-medium);\n        }\n\n        .summary-stats {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n          gap: var(--kt-space-md);\n          margin-bottom: var(--kt-space-lg);\n        }\n\n        .summary-card {\n          background: var(--kt-surface-variant);\n          padding: var(--kt-space-lg);\n          border-radius: var(--kt-radius-md);\n          text-align: center;\n        }\n\n        .summary-number {\n          font-size: 2em;\n          font-weight: 700;\n          color: var(--kt-primary);\n          margin-bottom: var(--kt-space-xs);\n        }\n\n        .summary-label {\n          font-size: 0.9em;\n          color: var(--secondary-text-color);\n          font-weight: 600;\n        }\n\n        /* Enhanced responsive optimizations */\n        @media (max-width: 1200px) {\n          .children-grid {\n            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n            gap: var(--kt-space-md);\n          }\n        }\n\n        @media (max-width: 768px) {\n          .children-grid {\n            grid-template-columns: 1fr;\n            gap: var(--kt-space-md);\n          }\n          \n          .navigation {\n            justify-content: center;\n            gap: var(--kt-space-xs);\n          }\n\n          .nav-button {\n            padding: var(--kt-space-xs);\n            font-size: 0.8em;\n          }\n\n          .summary-stats {\n            grid-template-columns: repeat(2, 1fr);\n            gap: var(--kt-space-sm);\n          }\n\n          .card-header {\n            padding: var(--kt-space-md);\n          }\n\n          .main-content {\n            padding: var(--kt-space-md);\n          }\n        }\n\n        @media (max-width: 480px) {\n          .child-stats {\n            flex-direction: column;\n            align-items: center;\n            gap: var(--kt-space-xs);\n          }\n\n          .summary-stats {\n            grid-template-columns: 1fr;\n          }\n\n          .card-content {\n            padding: var(--kt-space-sm);\n          }\n\n          .card-title {\n            font-size: var(--kt-font-size-md);\n            text-align: center;\n          }\n\n          .navigation {\n            flex-direction: column;\n            align-items: center;\n          }\n\n          .nav-button {\n            width: 100%;\n            max-width: 200px;\n            text-align: center;\n          }\n        }\n\n        @media (max-width: 320px) {\n          .card-content {\n            padding: var(--kt-space-xs);\n          }\n\n          .child-card {\n            padding: var(--kt-space-md);\n          }\n\n          .summary-card {\n            padding: var(--kt-space-md);\n          }\n        }\n      </style>\n    "}renderNavigation(){return`\n      <div class="navigation">\n        ${[{id:"dashboard",label:"🏠 Tableau de bord"},{id:"summary",label:"📊 Résumé"},{id:"management",label:"⚙️ Gestion"}].map(t=>`\n          <button \n            class="nav-button ${this.currentView===t.id?"active":""}"\n            data-action="switch-view"\n            data-id="${t.id}"\n          >\n            ${t.label}\n          </button>\n        `).join("")}\n      </div>\n    `}renderCurrentView(t){switch(this.currentView){case"dashboard":default:return this.renderDashboard(t);case"summary":return this.renderSummary(t);case"management":return this.renderManagement(t)}}renderDashboard(t){return 0===t.length?'\n        <div class="kt-empty">\n          <div class="kt-empty__icon">👨‍👩‍👧‍👦</div>\n          <div class="kt-empty__text">Aucun enfant configuré</div>\n          <div class="kt-empty__subtext">Configurez des enfants dans l\'intégration Kids Tasks Manager.</div>\n        </div>\n      ':`\n      <div class="children-grid kt-fade-in">\n        ${t.map(t=>this.renderChildCard(t)).join("")}\n      </div>\n    `}renderSummary(t){const e=this.calculateGlobalStats(t);return`\n      <div class="summary-stats kt-fade-in">\n        <div class="summary-card">\n          <div class="summary-number">${t.length}</div>\n          <div class="summary-label">Enfants</div>\n        </div>\n        <div class="summary-card">\n          <div class="summary-number">${e.totalTasks}</div>\n          <div class="summary-label">Tâches actives</div>\n        </div>\n        <div class="summary-card">\n          <div class="summary-number">${e.completedToday}</div>\n          <div class="summary-label">Terminées aujourd'hui</div>\n        </div>\n        <div class="summary-card">\n          <div class="summary-number">${e.totalPoints}</div>\n          <div class="summary-label">Points totaux</div>\n        </div>\n      </div>\n      \n      <div class="children-grid">\n        ${t.map(t=>this.renderChildSummary(t)).join("")}\n      </div>\n    `}renderManagement(t){return'\n      <div class="management-content">\n        <div class="kt-empty">\n          <div class="kt-empty__icon">🚧</div>\n          <div class="kt-empty__text">Gestion avancée</div>\n          <div class="kt-empty__subtext">Fonctionnalités de gestion en cours de développement.</div>\n        </div>\n      </div>\n    '}renderChildCard(t){const e=this.getChildStats(t),n=e.totalToday>0?e.completedToday/e.totalToday*100:0;return`\n      <div class="child-card kt-clickable" data-action="view-child" data-id="${t.id}">\n        <div class="child-header">\n          <div class="child-avatar">${t.avatar||"👤"}</div>\n          <div class="child-name">${t.name}</div>\n          <div class="child-stats kt-flex kt-flex-wrap kt-gap-sm kt-flex-center">\n            <span class="kt-stat kt-stat--points">${t.points||0} 🎫</span>\n            <span class="kt-stat kt-stat--coins">${t.coins||0} 🪙</span>\n            <span class="kt-stat">Niv. ${t.level||1}</span>\n          </div>\n        </div>\n        \n        <div class="child-progress">\n          Aujourd'hui: ${e.completedToday}/${e.totalToday} tâches\n          <div class="progress-bar">\n            <div class="progress-fill" style="width: ${n}%"></div>\n          </div>\n        </div>\n        \n        <div class="child-actions">\n          <button class="kt-btn kt-btn--primary" data-action="view-child" data-id="${t.id}">\n            Voir les tâches\n          </button>\n        </div>\n      </div>\n    `}renderChildSummary(t){const e=this.getChildStats(t);return`\n      <div class="child-card">\n        <div class="child-header">\n          <div class="child-avatar">${t.avatar||"👤"}</div>\n          <div class="child-name">${t.name}</div>\n        </div>\n        \n        <div class="kt-flex kt-gap-md">\n          <div class="summary-card">\n            <div class="summary-number">${e.completedToday}</div>\n            <div class="summary-label">Tâches terminées</div>\n          </div>\n          <div class="summary-card">\n            <div class="summary-number">${t.points||0}</div>\n            <div class="summary-label">Points</div>\n          </div>\n        </div>\n      </div>\n    `}handleAction(t,e,n){switch(t){case"switch-view":this.currentView=e,this.render();break;case"view-child":this.handleViewChild(e)}}handleViewChild(t){const e=new CustomEvent("kids-tasks-view-child",{detail:{childId:t},bubbles:!0});this.dispatchEvent(e)}getChildren(){if(!this._hass)return[];const t=[];return Object.keys(this._hass.states).forEach(e=>{if(e.startsWith("sensor.kidtasks_")&&e.endsWith("_points")){const n=this._hass.states[e];if(n&&"unavailable"!==n.state){const s=e.replace("sensor.kidtasks_","").replace("_points","");t.push({id:s,name:n.attributes.friendly_name||s,points:parseInt(n.state)||0,coins:n.attributes.coins||0,level:n.attributes.level||1,avatar:n.attributes.avatar||n.attributes.cosmetics?.avatar?.emoji||"👤",...n.attributes})}}}),t.sort((t,e)=>t.name.localeCompare(e.name))}getChildStats(t){const e=this.getChildTasks(t.id),n=(new Date).toDateString();return{completedToday:e.filter(t=>("completed"===t.status||"validated"===t.status)&&t.completed_at&&new Date(t.completed_at).toDateString()===n).length,totalToday:e.filter(t=>"todo"===t.status).length,totalTasks:e.length}}getChildTasks(t){if(!this._hass)return[];return Object.keys(this._hass.states).filter(t=>t.startsWith("sensor.kidtasks_task_")).map(t=>this._hass.states[t]).filter(e=>e.attributes&&e.attributes.assigned_children&&e.attributes.assigned_children.includes(t)).map(t=>({id:t.entity_id.replace("sensor.kidtasks_task_",""),name:t.attributes.friendly_name||"Tâche",status:t.state,completed_at:t.attributes.completed_at,...t.attributes}))}calculateGlobalStats(t){let e=0,n=0,s=0;return t.forEach(t=>{const a=this.getChildStats(t);e+=a.totalToday,n+=a.completedToday,s+=t.points||0}),{totalTasks:e,completedToday:n,totalPoints:s}}static getConfigElement(){return document.createElement("kids-tasks-card-editor")}static getStubConfig(){return{type:"custom:kids-tasks-card",title:"Kids Tasks Manager",show_navigation:!0,show_completed:!1,show_rewards:!0,mode:"dashboard"}}}class d extends i{constructor(){super(),this._refreshInterval=null,this._refreshTimeout=null,this._allTimers=new Set,this.currentTab="tasks",this.tasksFilter="active",this.rewardsFilter="all",this._lastDataHash=null,this._isVisible=!0,this._refreshRate=3e4}connectedCallback(){this._setupSmartRefresh(),this._setupVisibilityDetection(),this._cleanupTimers()}disconnectedCallback(){this._cleanupTimers(),this._removeVisibilityDetection()}_setupSmartRefresh(){const t=()=>{if(!this._hass||!this._initialized||!this._isVisible)return void this._scheduleNextRefresh();const t=this._getDataHash();t!==this._lastDataHash?(this._lastDataHash=t,this.smartRender(),this._scheduleNextRefresh()):this._scheduleNextRefresh()};this._hass&&this._initialized&&t()}_scheduleNextRefresh(){this._cleanupRefreshTimers();const t=this._isVisible?this._refreshRate:2*this._refreshRate;this._refreshTimeout=setTimeout(()=>{this._setupSmartRefresh()},t),this._allTimers.add(this._refreshTimeout)}_getDataHash(){if(!this._hass||!this.config?.child_id)return null;const t=this.getChild(),e=this.getChildTasks(this.config.child_id),n=this.getChildRewards(this.config.child_id),s=JSON.stringify({childPoints:t?.points||0,childCoins:t?.coins||0,childLevel:t?.level||1,taskCount:e.length,taskStates:e.map(t=>`${t.id}:${t.status}`).join(","),rewardCount:n.length});let a=0;for(let t=0;t<s.length;t++){a=(a<<5)-a+s.charCodeAt(t),a&=a}return a.toString()}_setupVisibilityDetection(){this._visibilityChangeHandler=()=>{this._isVisible=!document.hidden,this._isVisible?this._setupSmartRefresh():this._cleanupRefreshTimers()},document.addEventListener("visibilitychange",this._visibilityChangeHandler),this._isVisible=!document.hidden}_removeVisibilityDetection(){this._visibilityChangeHandler&&(document.removeEventListener("visibilitychange",this._visibilityChangeHandler),this._visibilityChangeHandler=null)}_cleanupRefreshTimers(){this._refreshInterval&&(clearInterval(this._refreshInterval),this._refreshInterval=null),this._refreshTimeout&&(clearTimeout(this._refreshTimeout),this._allTimers.delete(this._refreshTimeout),this._refreshTimeout=null)}_cleanupTimers(){this._cleanupRefreshTimers();for(const t of this._allTimers)clearTimeout(t),clearInterval(t);this._allTimers.clear(),performanceMonitor&&performanceMonitor.trackEventHandler("timers",this.constructor.name,"remove")}_cleanupTouchInteractions(){super._cleanupTouchInteractions(),this._cleanupTimers()}setConfig(t){if(!t||!t.child_id)throw new Error("Invalid configuration: child_id required");this.config={child_id:t.child_id,title:t.title||"Mes Tâches",show_avatar:!1!==t.show_avatar,show_progress:!1!==t.show_progress,show_rewards:!1!==t.show_rewards,show_completed:!1!==t.show_completed,...t},this._initialized&&this._hass&&this.render()}shouldUpdate(t,e){if(!t)return!0;const n=this.config.child_id,s=this.getChildFromHass(t,n),a=this.getChildFromHass(e,n);if(JSON.stringify(s)!==JSON.stringify(a))return!0;const r=Object.keys(e.states).filter(t=>t.startsWith("sensor.kidtasks_task_")),i=Object.keys(e.states).filter(t=>t.startsWith("sensor.kidtasks_reward_"));for(const n of[...r,...i]){const s=t.states[n],a=e.states[n];if(!s||!a||s.state!==a.state||JSON.stringify(s.attributes)!==JSON.stringify(a.attributes))return!0}return!1}render(){if(!this._hass||!this.config)return void(this.shadowRoot.innerHTML='<div class="loading">Chargement...</div>');const t=this.getChild();if(t)try{this.shadowRoot.innerHTML=`\n        ${this.getStyles()}\n        <div class="child-card-container">\n          ${this.renderHeader(t)}\n          ${this.renderTabs()}\n          ${this.renderTabContent(t)}\n        </div>\n      `}catch(t){this.shadowRoot.innerHTML=`\n        ${this.getStyles()}\n        <div class="error">Erreur: ${t.message}</div>\n      `}else this.shadowRoot.innerHTML=`\n        ${this.getStyles()}\n        <div class="error">\n          Enfant non trouvé (ID: ${this.config.child_id})\n        </div>\n      `}getStyles(){return"\n      <style>\n        :host {\n          display: block;\n          background: var(--card-background-color, white);\n          border-radius: var(--kt-radius-lg);\n          overflow: hidden;\n          box-shadow: var(--box-shadow, 0 2px 8px rgba(0,0,0,0.1));\n        }\n\n        .child-card-container {\n          padding: var(--kt-space-lg);\n        }\n\n        .child-header {\n          text-align: center;\n          margin-bottom: var(--kt-space-lg);\n          padding: var(--kt-space-lg);\n          background: var(--kt-surface-variant);\n          border-radius: var(--kt-radius-md);\n        }\n\n        .child-avatar {\n          font-size: 4em;\n          margin-bottom: var(--kt-space-sm);\n        }\n\n        .child-name {\n          font-size: 1.5em;\n          font-weight: 700;\n          color: var(--primary-text-color);\n          margin-bottom: var(--kt-space-sm);\n        }\n\n        .child-stats {\n          display: flex;\n          gap: var(--kt-space-md);\n          justify-content: center;\n          flex-wrap: wrap;\n        }\n\n        .stat {\n          background: var(--kt-primary);\n          color: white;\n          padding: var(--kt-space-xs) var(--kt-space-md);\n          border-radius: var(--kt-radius-sm);\n          font-weight: 600;\n          font-size: 0.9em;\n        }\n\n        .tabs {\n          display: flex;\n          border-bottom: 2px solid var(--kt-surface-variant);\n          margin-bottom: var(--kt-space-lg);\n          gap: var(--kt-space-sm);\n        }\n\n        .tab-button {\n          background: none;\n          border: none;\n          padding: var(--kt-space-sm) var(--kt-space-md);\n          border-radius: var(--kt-radius-sm) var(--kt-radius-sm) 0 0;\n          cursor: pointer;\n          font-weight: 600;\n          transition: all var(--kt-transition-fast);\n          color: var(--secondary-text-color);\n        }\n\n        .tab-button.active {\n          background: var(--kt-primary);\n          color: white;\n        }\n\n        .tab-button:hover {\n          background: var(--kt-surface-variant);\n        }\n\n        .tab-button.active:hover {\n          background: var(--kt-primary);\n          opacity: 0.9;\n        }\n\n        .tab-content {\n          min-height: 200px;\n        }\n\n        .task-list, .reward-list {\n          display: flex;\n          flex-direction: column;\n          gap: var(--kt-space-sm);\n        }\n\n        .task-item, .reward-item {\n          background: var(--kt-surface-variant);\n          border-radius: var(--kt-radius-md);\n          padding: var(--kt-space-md);\n          transition: all var(--kt-transition-fast);\n          cursor: pointer;\n        }\n\n        .task-item:hover, .reward-item:hover {\n          transform: translateY(-1px);\n          box-shadow: 0 2px 8px var(--kt-shadow-light);\n        }\n\n        .task-title, .reward-title {\n          font-weight: 600;\n          margin-bottom: var(--kt-space-xs);\n        }\n\n        .task-description, .reward-description {\n          font-size: 0.9em;\n          color: var(--secondary-text-color);\n          margin-bottom: var(--kt-space-sm);\n        }\n\n        .task-meta, .reward-meta {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          font-size: 0.8em;\n        }\n\n        .task-points, .reward-cost {\n          background: var(--kt-success);\n          color: white;\n          padding: 2px 8px;\n          border-radius: var(--kt-radius-sm);\n          font-weight: 600;\n        }\n\n        .task-status {\n          padding: 2px 8px;\n          border-radius: var(--kt-radius-sm);\n          font-weight: 600;\n          text-transform: uppercase;\n          font-size: 0.7em;\n        }\n\n        .task-status.todo { background: var(--kt-warning); color: white; }\n        .task-status.completed { background: var(--kt-success); color: white; }\n        .task-status.pending { background: var(--kt-info); color: white; }\n        .task-status.validated { background: var(--kt-success); color: white; }\n\n        .filters {\n          display: flex;\n          gap: var(--kt-space-sm);\n          margin-bottom: var(--kt-space-lg);\n          flex-wrap: wrap;\n        }\n\n        .filter-btn {\n          background: var(--kt-surface-variant);\n          border: 2px solid transparent;\n          padding: var(--kt-space-xs) var(--kt-space-md);\n          border-radius: var(--kt-radius-sm);\n          cursor: pointer;\n          font-weight: 600;\n          transition: all var(--kt-transition-fast);\n          font-size: 0.85em;\n        }\n\n        .filter-btn.active {\n          border-color: var(--kt-primary);\n          background: var(--kt-primary);\n          color: white;\n        }\n\n        .loading {\n          text-align: center;\n          padding: var(--kt-space-xl);\n          color: var(--secondary-text-color);\n        }\n\n        .error {\n          background: var(--kt-error);\n          color: white;\n          padding: var(--kt-space-md);\n          border-radius: var(--kt-radius-md);\n          text-align: center;\n        }\n\n        .empty-state {\n          text-align: center;\n          padding: var(--kt-space-xl);\n          color: var(--secondary-text-color);\n        }\n\n        .empty-icon {\n          font-size: 3em;\n          margin-bottom: var(--kt-space-md);\n          opacity: 0.6;\n        }\n\n        /* Progress gauges */\n        .progress-section {\n          margin-bottom: var(--kt-space-lg);\n        }\n\n        .gauge {\n          margin-bottom: var(--kt-space-md);\n        }\n\n        .gauge-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: var(--kt-space-xs);\n        }\n\n        .gauge-label {\n          font-weight: 600;\n          color: var(--primary-text-color);\n        }\n\n        .gauge-value {\n          font-weight: 700;\n          color: var(--kt-primary);\n        }\n\n        .gauge-bar {\n          height: 8px;\n          background: var(--kt-surface-variant);\n          border-radius: var(--kt-radius-sm);\n          overflow: hidden;\n        }\n\n        .gauge-fill {\n          height: 100%;\n          transition: width var(--kt-transition-medium);\n          border-radius: var(--kt-radius-sm);\n        }\n\n        .gauge-fill.tasks-fill {\n          background: linear-gradient(90deg, var(--kt-success) 0%, var(--kt-info) 100%);\n        }\n\n        .gauge-fill.points-fill {\n          background: var(--kt-success);\n        }\n\n        .gauge-fill.coins-fill {\n          background: var(--kt-coins-color);\n        }\n\n        /* Responsive */\n        @media (max-width: 768px) {\n          .child-card-container {\n            padding: var(--kt-space-md);\n          }\n          \n          .tabs {\n            flex-wrap: wrap;\n          }\n          \n          .child-stats {\n            justify-content: center;\n          }\n        }\n      </style>\n    "}renderHeader(t){if(!this.config.show_avatar)return"";const e=this.getChildStats(t);return`\n      <div class="child-header">\n        <div class="child-avatar">${this.getAvatar(t)}</div>\n        <div class="child-name">${t.name}</div>\n        <div class="child-stats">\n          <span class="stat">${t.points||0} 🎫 Points</span>\n          <span class="stat">${t.coins||0} 🪙 Pièces</span>\n          <span class="stat">Niveau ${t.level||1}</span>\n        </div>\n        ${this.config.show_progress?this.renderProgress(e):""}\n      </div>\n    `}renderProgress(t){return`\n      <div class="progress-section">\n        ${this.renderGauges(t,!0,t.completedToday,t.totalTasksToday)}\n      </div>\n    `}renderTabs(){return`\n      <div class="tabs">\n        ${[{id:"tasks",label:"✅ Tâches",show:!0},{id:"rewards",label:"🎁 Récompenses",show:this.config.show_rewards},{id:"history",label:"📈 Historique",show:this.config.show_completed}].filter(t=>t.show).map(t=>`\n          <button \n            class="tab-button ${this.currentTab===t.id?"active":""}"\n            data-action="switch-tab"\n            data-id="${t.id}"\n          >\n            ${t.label}\n          </button>\n        `).join("")}\n      </div>\n    `}renderTabContent(t){switch(this.currentTab){case"tasks":default:return this.renderTasksTab(t);case"rewards":return this.renderRewardsTab(t);case"history":return this.renderHistoryTab(t)}}renderTasksTab(t){const e=this.getChildTasks(t.id),n=this.filterTasks(e);return`\n      <div class="tab-content">\n        ${this.renderTaskFilters()}\n        ${n.length>0?`\n          <div class="task-list">\n            ${n.map(t=>this.renderTaskItem(t)).join("")}\n          </div>\n        `:this.emptySection("📝","Aucune tâche","Aucune tâche disponible pour ce filtre.")}\n      </div>\n    `}renderTaskFilters(){return`\n      <div class="filters">\n        ${[{id:"active",label:"Actives"},{id:"completed",label:"Terminées"},{id:"all",label:"Toutes"}].map(t=>`\n          <button \n            class="filter-btn ${this.tasksFilter===t.id?"active":""}"\n            data-action="filter-tasks"\n            data-filter="${t.id}"\n          >\n            ${t.label}\n          </button>\n        `).join("")}\n      </div>\n    `}renderTaskItem(t){return`\n      <div class="task-item kt-clickable-item" data-action="complete-task" data-id="${t.id}">\n        <div class="task-title">${this.getCategoryIcon(t)} ${t.name}</div>\n        <div class="task-description">${t.description||""}</div>\n        <div class="task-meta">\n          <span class="task-points">+${t.points||0} 🎫</span>\n          <span class="task-status ${t.status}">${t.status}</span>\n        </div>\n      </div>\n    `}renderRewardsTab(t){const e=this.getRewards().filter(e=>(e.min_level||1)<=(t.level||1)).filter(e=>e.cost<=t.points&&e.coin_cost<=t.coins);return`\n      <div class="tab-content">\n        ${e.length>0?`\n          <div class="reward-list">\n            ${e.map(e=>this.renderRewardItem(e,t)).join("")}\n          </div>\n        `:this.emptySection("🎁","Aucune récompense","Aucune récompense disponible pour le moment.")}\n      </div>\n    `}renderRewardItem(t,e){return`\n      <div class="reward-item kt-clickable-item ${t.cost<=e.points&&t.coin_cost<=e.coins?"":"disabled"}" \n           data-action="claim-reward" \n           data-id="${t.id}">\n        <div class="reward-title">${this.getCategoryIcon(t)} ${t.name}</div>\n        <div class="reward-description">${t.description||""}</div>\n        <div class="reward-meta">\n          <span class="reward-cost">\n            ${t.cost>0?`${t.cost} 🎫`:""}\n            ${t.coin_cost>0?` ${t.coin_cost} 🪙`:""}\n          </span>\n        </div>\n      </div>\n    `}renderHistoryTab(t){return'\n      <div class="tab-content">\n        <div class="empty-state">\n          <div class="empty-icon">📈</div>\n          <div class="empty-text">Historique</div>\n          <div class="empty-subtext">Fonctionnalité en développement</div>\n        </div>\n      </div>\n    '}handleAction(t,e,n){switch(t){case"switch-tab":this.currentTab=e,this.render();break;case"filter-tasks":this.tasksFilter=e,this.render();break;case"complete-task":this.completeTask(e);break;case"claim-reward":this.claimReward(e)}}filterTasks(t){switch(this.tasksFilter){case"active":return t.filter(t=>"todo"===t.status||"pending"===t.status);case"completed":return t.filter(t=>"completed"===t.status||"validated"===t.status);default:return t}}async completeTask(t){try{await this._hass.callService("kids_tasks","complete_task",{task_id:t,child_id:this.config.child_id})}catch(t){}}async claimReward(t){try{await this._hass.callService("kids_tasks","claim_reward",{reward_id:t,child_id:this.config.child_id})}catch(t){}}getChild(){const t=this.config.child_id;return this.getChildFromHass(this._hass,t)}getChildFromHass(t,e){const n=`sensor.kidtasks_${e}_points`,s=t.states[n];return s?{id:e,name:s.attributes.friendly_name||e,points:parseInt(s.state)||0,coins:s.attributes.coins||0,level:s.attributes.level||1,...s.attributes}:null}getChildTasks(t){if(!this._hass)return[];return Object.keys(this._hass.states).filter(t=>t.startsWith("sensor.kidtasks_task_")).map(t=>this._hass.states[t]).filter(e=>e.attributes&&e.attributes.assigned_children&&e.attributes.assigned_children.includes(t)).map(t=>({id:t.entity_id.replace("sensor.kidtasks_task_",""),name:t.attributes.friendly_name||"Tâche",description:t.attributes.description,status:t.state,points:t.attributes.points||0,category:t.attributes.category,icon:t.attributes.icon,...t.attributes}))}getRewards(){if(!this._hass)return[];return Object.keys(this._hass.states).filter(t=>t.startsWith("sensor.kidtasks_reward_")).map(t=>this._hass.states[t]).map(t=>({id:t.entity_id.replace("sensor.kidtasks_reward_",""),name:t.attributes.friendly_name||"Récompense",description:t.attributes.description,cost:t.attributes.cost||0,coin_cost:t.attributes.coin_cost||0,min_level:t.attributes.min_level||1,category:t.attributes.category,icon:t.attributes.icon,...t.attributes}))}getChildStats(t){const e=this.getChildTasks(t.id);return{completedToday:e.filter(t=>("completed"===t.status||"validated"===t.status)&&this.isToday(t.completed_at)).length,totalTasksToday:e.filter(t=>"todo"===t.status).length,points:t.points||0,coins:t.coins||0}}getAvatar(t){return t.avatar||t.cosmetics?.avatar?.emoji||"👤"}isToday(t){if(!t)return!1;const e=(new Date).toDateString();return new Date(t).toDateString()===e}static getConfigElement(){return document.createElement("kids-tasks-child-card-editor")}static getStubConfig(){return{type:"custom:kids-tasks-child-card",child_id:"child1",title:"Mes Tâches",show_avatar:!0,show_progress:!0,show_rewards:!0,show_completed:!0}}}class c extends HTMLElement{constructor(){super(),this._config={},this._rendered=!1,this._hass=null}setConfig(t){this._config={...t},this._fireConfigChanged()}set hass(t){this._hass=t,this._rendered||(this._render(),this._rendered=!0)}_render(){this.innerHTML=`\n      <div class="card-config">\n        <div class="option">\n          <label>Titre de la carte</label>\n          <input \n            type="text" \n            class="title-input"\n            value="${this._config.title||""}"\n            placeholder="Gestionnaire de Tâches Enfants"\n          >\n        </div>\n        <div class="option">\n          <label>\n            <input \n              type="checkbox" \n              class="navigation-toggle"\n              ${!1!==this._config.show_navigation?"checked":""}\n            >\n            Afficher la navigation\n          </label>\n        </div>\n        ${this._renderSpecificOptions()}\n      </div>\n      <style>\n        .card-config {\n          padding: 16px;\n          font-family: var(--paper-font-body1_-_font-family, 'Roboto', sans-serif);\n        }\n        \n        .option {\n          margin-bottom: 16px;\n        }\n        \n        .option label {\n          display: block;\n          margin-bottom: 4px;\n          font-weight: 500;\n          color: var(--primary-text-color);\n        }\n        \n        .option input[type="text"],\n        .option input[type="number"],\n        .option select {\n          width: 100%;\n          padding: 8px 12px;\n          border: 1px solid var(--divider-color);\n          border-radius: 4px;\n          background: var(--card-background-color);\n          color: var(--primary-text-color);\n          font-size: 14px;\n        }\n        \n        .option input[type="checkbox"] {\n          margin-right: 8px;\n        }\n        \n        .option label:has(input[type="checkbox"]) {\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n        }\n        \n        .help-text {\n          font-size: 12px;\n          color: var(--secondary-text-color);\n          margin-top: 4px;\n        }\n        \n        .section-title {\n          font-size: 16px;\n          font-weight: 600;\n          margin: 24px 0 12px 0;\n          color: var(--primary-text-color);\n          border-bottom: 1px solid var(--divider-color);\n          padding-bottom: 4px;\n        }\n      </style>\n    `,this._attachListeners()}_renderSpecificOptions(){return""}_attachListeners(){const t=this.querySelector(".title-input"),e=this.querySelector(".navigation-toggle");t&&t.addEventListener("input",t=>{this._config.title=t.target.value,this._fireConfigChanged()}),e&&e.addEventListener("change",t=>{this._config.show_navigation=t.target.checked,this._fireConfigChanged()}),this._attachSpecificListeners()}_attachSpecificListeners(){}_fireConfigChanged(){const t=new CustomEvent("config-changed",{detail:{config:this._config},bubbles:!0,composed:!0});this.dispatchEvent(t)}}const l=new class{constructor(){this.errors=new Map,this.retryAttempts=new Map,this.setupGlobalErrorHandling()}setupGlobalErrorHandling(){window.addEventListener("error",t=>{this.handleGlobalError(t.error,t.filename,t.lineno)}),window.addEventListener("unhandledrejection",t=>{this.handleGlobalError(t.reason,"Promise",0),t.preventDefault()})}handleGlobalError(t,e="Unknown",n=0){(!e||e.includes("kids-tasks")||e.includes("KidsTask"))&&(r.error(`Global error caught: ${t.message||t}`,{source:e,line:n,stack:t.stack}),this.attemptRecovery(t))}wrapComponent(t,e){const n=t[e];n&&(t.constructor.name,t[e]=(...s)=>{try{return n.apply(t,s)}catch(n){return this.handleComponentError(t,e,n,s)}})}handleComponentError(t,e,n,s=[]){const a=`${t.constructor.name}.${e}`,i=`${a}:${n.message}`,o=(this.errors.get(i)||0)+1;return this.errors.set(i,o),r.error(`Component error in ${a}:`,n),this.recoverFromError(t,e,n,o)}recoverFromError(t,e,n,s){const a=t.constructor.name;if(s<=3&&"render"!==e){const n=100*Math.pow(2,s);return setTimeout(()=>{try{r.debug(`Retrying ${a}.${e} (attempt ${s})`),t[e]?.()}catch(t){r.warn(`Retry failed for ${a}.${e}:`,t)}},n),null}return"render"===e||"smartRender"===e?this.renderErrorFallback(t,n):s>5?(this.enterSafeMode(t,n),null):e.includes("set")||e.includes("update")?this.resetComponentState(t,n):null}renderErrorFallback(t,e){if(!t.shadowRoot)return;const n=Date.now().toString(36),s=!e.message.includes("fatal");t.shadowRoot.innerHTML=`\n      <div class="kt-error-boundary" data-error-id="${n}">\n        <style>\n          .kt-error-boundary {\n            padding: var(--kt-space-lg, 16px);\n            background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);\n            border: 1px solid #fca5a5;\n            border-radius: var(--kt-radius-md, 8px);\n            color: var(--kt-error, #dc2626);\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n          }\n          .kt-error-title {\n            font-size: 1.1em;\n            font-weight: 600;\n            margin: 0 0 8px 0;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          .kt-error-message {\n            font-size: 0.9em;\n            margin: 0 0 16px 0;\n            opacity: 0.8;\n            line-height: 1.4;\n          }\n          .kt-error-actions {\n            display: flex;\n            gap: 8px;\n            flex-wrap: wrap;\n          }\n          .kt-error-btn {\n            padding: 6px 12px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 0.9em;\n            font-weight: 500;\n            transition: all 0.2s;\n          }\n          .kt-error-btn--retry {\n            background: var(--kt-primary, #2563eb);\n            color: white;\n          }\n          .kt-error-btn--retry:hover {\n            background: var(--kt-primary-dark, #1d4ed8);\n          }\n          .kt-error-btn--reset {\n            background: var(--kt-surface-variant, #f3f4f6);\n            color: var(--kt-text, #374151);\n          }\n          .kt-error-btn--reset:hover {\n            background: var(--kt-surface-hover, #e5e7eb);\n          }\n          .kt-error-details {\n            margin-top: 12px;\n            padding: 8px;\n            background: rgba(0, 0, 0, 0.05);\n            border-radius: 4px;\n            font-family: monospace;\n            font-size: 0.8em;\n            display: none;\n          }\n          .kt-error-toggle {\n            color: var(--kt-primary, #2563eb);\n            text-decoration: underline;\n            cursor: pointer;\n            font-size: 0.8em;\n          }\n          @media (max-width: 480px) {\n            .kt-error-boundary {\n              padding: 12px;\n            }\n            .kt-error-actions {\n              flex-direction: column;\n            }\n            .kt-error-btn {\n              width: 100%;\n              text-align: center;\n            }\n          }\n        </style>\n        \n        <div class="kt-error-title">\n          ⚠️ Oops! Something went wrong\n        </div>\n        \n        <div class="kt-error-message">\n          We encountered an issue loading this card. This is usually temporary.\n        </div>\n        \n        <div class="kt-error-actions">\n          ${s?"\n            <button class=\"kt-error-btn kt-error-btn--retry\" onclick=\"this.closest('.kt-error-boundary').dispatchEvent(new CustomEvent('retry'))\">\n              🔄 Try Again\n            </button>\n          ":""}\n          <button class="kt-error-btn kt-error-btn--reset" onclick="this.closest('.kt-error-boundary').dispatchEvent(new CustomEvent('reset'))">\n            🔧 Reset Card\n          </button>\n          <span class="kt-error-toggle" onclick="\n            const details = this.parentNode.parentNode.querySelector('.kt-error-details');\n            details.style.display = details.style.display === 'block' ? 'none' : 'block';\n            this.textContent = details.style.display === 'block' ? 'Hide details' : 'Show details';\n          ">Show details</span>\n        </div>\n        \n        <div class="kt-error-details">\n          <strong>Component:</strong> ${t.constructor.name}<br>\n          <strong>Error:</strong> ${e.message}<br>\n          <strong>Time:</strong> ${(new Date).toLocaleString()}\n        </div>\n      </div>\n    `;const a=t.shadowRoot.querySelector(".kt-error-boundary");return a.addEventListener("retry",()=>{r.debug("User requested retry for",t.constructor.name),t.smartRender?.(!0)||t.render?.()}),a.addEventListener("reset",()=>{r.debug("User requested reset for",t.constructor.name),this.resetComponentState(t,e)}),a}resetComponentState(t,e){try{if(t._lastRenderState&&(t._lastRenderState=null),t._refreshTimeout&&(clearTimeout(t._refreshTimeout),t._refreshTimeout=null),t.setConfig&&t.constructor.getStubConfig){const e=t.constructor.getStubConfig();t.setConfig(e)}r.info(`Reset component state for ${t.constructor.name}`),setTimeout(()=>{t.smartRender?.(!0)||t.render?.()},100)}catch(e){r.error("Failed to reset component state:",e),this.enterSafeMode(t,e)}}enterSafeMode(t,e){r.warn(`Entering safe mode for ${t.constructor.name}`),t.shadowRoot&&(t.shadowRoot.innerHTML='\n        <div style="padding: 16px; text-align: center; color: #666;">\n          <div style="font-size: 2em; margin-bottom: 8px;">🛡️</div>\n          <div style="font-weight: bold; margin-bottom: 4px;">Safe Mode</div>\n          <div style="font-size: 0.9em;">This card is experiencing issues and has been disabled for stability.</div>\n        </div>\n      ')}attemptRecovery(t){document.querySelectorAll("kids-tasks-card, kids-tasks-child-card").forEach(t=>{t.shadowRoot&&t.shadowRoot.innerHTML.includes("kt-error-boundary")&&setTimeout(()=>{t.smartRender&&t.smartRender(!0)},2e3)})}getErrorStats(){const t={totalErrors:0,errorsByComponent:{},recentErrors:[]};for(const[e,n]of this.errors.entries()){const[s]=e.split(".");t.totalErrors+=n,t.errorsByComponent[s]=(t.errorsByComponent[s]||0)+n}return t}clearErrors(){this.errors.clear(),this.retryAttempts.clear(),r.info("Error history cleared")}};function h(t){return["render","setConfig","set hass","handleAction","connectedCallback"].forEach(e=>{l.wrapComponent(t,e)}),t}new class{constructor(){this.focusableElements=[],this.announcements=[],this.keyboardNavigation=new Map,this.setupGlobalAccessibility()}setupGlobalAccessibility(){this.createAnnouncementRegion(),this.setupGlobalKeyboardHandling(),this.observeCardElements()}createAnnouncementRegion(){if(document.getElementById("kt-announcements"))return;const t=document.createElement("div");t.id="kt-announcements",t.setAttribute("aria-live","polite"),t.setAttribute("aria-atomic","true"),t.style.cssText="\n      position: absolute;\n      left: -10000px;\n      width: 1px;\n      height: 1px;\n      overflow: hidden;\n    ",document.body.appendChild(t)}announce(t,e="polite"){const n=document.getElementById("kt-announcements");n&&(n.setAttribute("aria-live",e),n.textContent="",setTimeout(()=>{n.textContent=t,r.debug(`Accessibility announcement: ${t}`)},100),this.announcements.push({message:t,priority:e,timestamp:Date.now()}),this.announcements.length>10&&this.announcements.shift())}setupGlobalKeyboardHandling(){document.addEventListener("keydown",t=>{this.handleGlobalKeyboard(t)})}handleGlobalKeyboard(t){const e=t.target.closest("kids-tasks-card, kids-tasks-child-card");if(e)return"F1"===t.key?(t.preventDefault(),void this.showKeyboardHelp(e)):void("Escape"!==t.key?"Tab"!==t.key||this.handleTabNavigation(t,e):this.handleEscape(e))}showKeyboardHelp(t){const e=this.createHelpModal();t.shadowRoot.appendChild(e);const n=e.querySelector("button");n&&n.focus(),this.announce("Keyboard shortcuts help opened","assertive")}createHelpModal(){const t=document.createElement("div");return t.className="kt-help-modal",t.setAttribute("role","dialog"),t.setAttribute("aria-labelledby","help-title"),t.setAttribute("aria-modal","true"),t.innerHTML='\n      <div class="kt-help-overlay" onclick="this.closest(\'.kt-help-modal\').remove()"></div>\n      <div class="kt-help-content">\n        <h2 id="help-title">Keyboard Shortcuts</h2>\n        <div class="kt-help-shortcuts">\n          <div class="kt-shortcut">\n            <kbd>Tab</kbd>\n            <span>Navigate between interactive elements</span>\n          </div>\n          <div class="kt-shortcut">\n            <kbd>Space</kbd> / <kbd>Enter</kbd>\n            <span>Activate buttons and links</span>\n          </div>\n          <div class="kt-shortcut">\n            <kbd>Arrow Keys</kbd>\n            <span>Navigate within lists and tabs</span>\n          </div>\n          <div class="kt-shortcut">\n            <kbd>Escape</kbd>\n            <span>Close modal or cancel action</span>\n          </div>\n          <div class="kt-shortcut">\n            <kbd>F1</kbd>\n            <span>Show this help</span>\n          </div>\n        </div>\n        <div class="kt-help-actions">\n          <button class="kt-btn kt-btn--primary" onclick="this.closest(\'.kt-help-modal\').remove()">\n            Close Help\n          </button>\n        </div>\n      </div>\n      <style>\n        .kt-help-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 1000;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n        .kt-help-overlay {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n        }\n        .kt-help-content {\n          position: relative;\n          background: white;\n          border-radius: 8px;\n          padding: 24px;\n          max-width: 500px;\n          max-height: 80vh;\n          overflow-y: auto;\n          box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n        }\n        .kt-help-content h2 {\n          margin: 0 0 16px 0;\n          font-size: 1.25em;\n          color: var(--kt-text, #1f2937);\n        }\n        .kt-help-shortcuts {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n          margin-bottom: 24px;\n        }\n        .kt-shortcut {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          padding: 8px 0;\n        }\n        .kt-shortcut kbd {\n          background: var(--kt-surface-variant, #f3f4f6);\n          border: 1px solid var(--kt-border, #d1d5db);\n          border-radius: 4px;\n          padding: 4px 8px;\n          font-family: monospace;\n          font-size: 0.9em;\n          min-width: 80px;\n          text-align: center;\n        }\n        .kt-shortcut span {\n          color: var(--kt-text-secondary, #6b7280);\n          flex: 1;\n        }\n        .kt-help-actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: 8px;\n        }\n      </style>\n    ',t}handleEscape(t){const e=t.shadowRoot.querySelectorAll(".kt-help-modal, .kt-modal");if(e.length>0)return e[e.length-1].remove(),void this.announce("Modal closed");const n=t.shadowRoot.querySelectorAll(".kt-delete-confirmation");n.forEach(t=>t.remove()),n.length>0&&this.announce("Action cancelled")}handleTabNavigation(t,e){const n=this.getFocusableElements(e.shadowRoot);if(0===n.length)return;const s=n.indexOf(document.activeElement);t.shiftKey?0===s&&(t.preventDefault(),n[n.length-1].focus()):s===n.length-1&&(t.preventDefault(),n[0].focus())}getFocusableElements(t){return Array.from(t.querySelectorAll(["button:not([disabled])","input:not([disabled])","select:not([disabled])","textarea:not([disabled])","a[href]",'[tabindex]:not([tabindex="-1"])'].join(", "))).filter(t=>{const e=getComputedStyle(t);return"none"!==e.display&&"hidden"!==e.visibility})}observeCardElements(){if("undefined"==typeof MutationObserver)return;new MutationObserver(t=>{t.forEach(t=>{t.addedNodes.forEach(t=>{if(t.nodeType===Node.ELEMENT_NODE){(t.matches("kids-tasks-card, kids-tasks-child-card")?[t]:Array.from(t.querySelectorAll("kids-tasks-card, kids-tasks-child-card"))).forEach(t=>this.enhanceCardAccessibility(t))}})})}).observe(document.body,{childList:!0,subtree:!0})}enhanceCardAccessibility(t){t.shadowRoot&&(this.addAriaLabels(t),this.setupCardKeyboardNavigation(t),this.setupFocusManagement(t),r.debug("Enhanced accessibility for",t.constructor.name))}addAriaLabels(t){const e=t.shadowRoot,n=e.querySelector(".card-content");n&&!n.getAttribute("role")&&(n.setAttribute("role","region"),n.setAttribute("aria-label",t.config?.title||"Kids Tasks Card"));e.querySelectorAll(".nav-button").forEach((t,e)=>{t.setAttribute("role","tab"),t.setAttribute("aria-selected",t.classList.contains("active")?"true":"false"),t.setAttribute("tabindex",t.classList.contains("active")?"0":"-1")});e.querySelectorAll(".task-item, .reward-item, .child-card").forEach(t=>{t.getAttribute("role")||t.setAttribute("role","article");const e=t.querySelector(".task-title, .reward-name, .child-name");e&&!t.getAttribute("aria-label")&&t.setAttribute("aria-label",e.textContent)});e.querySelectorAll(".progress-fill").forEach(t=>{const e=t.style.width||"0%";t.setAttribute("role","progressbar"),t.setAttribute("aria-valuenow",parseInt(e)),t.setAttribute("aria-valuemin","0"),t.setAttribute("aria-valuemax","100"),t.setAttribute("aria-label",`Progress: ${e}`)})}setupCardKeyboardNavigation(t){const e=t.shadowRoot.querySelectorAll('.nav-button[role="tab"]');e.forEach((t,n)=>{t.addEventListener("keydown",t=>{let s;switch(t.key){case"ArrowLeft":t.preventDefault(),s=n>0?n-1:e.length-1,this.focusTab(e[s]);break;case"ArrowRight":t.preventDefault(),s=n<e.length-1?n+1:0,this.focusTab(e[s]);break;case"Home":t.preventDefault(),this.focusTab(e[0]);break;case"End":t.preventDefault(),this.focusTab(e[e.length-1])}})})}focusTab(t){t.parentNode.querySelectorAll('[role="tab"]').forEach(t=>t.setAttribute("tabindex","-1")),t.setAttribute("tabindex","0"),t.focus(),this.announce(`${t.textContent} tab selected`)}setupFocusManagement(t){t.shadowRoot.addEventListener("click",t=>{const e=t.target.closest("[data-action]");if(e&&"BUTTON"===e.tagName){const t=e.dataset.action,n=this.getActionAnnouncement(t,e);n&&this.announce(n)}}),this.addSkipLinks(t)}addSkipLinks(t){const e=t.shadowRoot,n=e.querySelector(".card-content");if(!n)return;const s=document.createElement("a");s.textContent="Skip to main content",s.href="#",s.className="kt-skip-link",s.style.cssText="\n      position: absolute;\n      left: -10000px;\n      top: auto;\n      width: 1px;\n      height: 1px;\n      overflow: hidden;\n    ",s.addEventListener("focus",()=>{s.style.cssText="\n        position: absolute;\n        left: 6px;\n        top: 6px;\n        width: auto;\n        height: auto;\n        overflow: visible;\n        z-index: 1000;\n        padding: 8px 12px;\n        background: var(--kt-primary, #2563eb);\n        color: white;\n        text-decoration: none;\n        border-radius: 4px;\n        font-size: 14px;\n      "}),s.addEventListener("blur",()=>{s.style.cssText="\n        position: absolute;\n        left: -10000px;\n        top: auto;\n        width: 1px;\n        height: 1px;\n        overflow: hidden;\n      "}),s.addEventListener("click",t=>{t.preventDefault();const n=e.querySelector(".main-content");n&&(n.focus(),this.announce("Skipped to main content"))}),n.insertBefore(s,n.firstChild)}getActionAnnouncement(t,e){return{"complete-task":"Task completed","uncomplete-task":"Task marked as incomplete","claim-reward":"Reward claimed","validate-task":"Task validated","delete-task":"Task deleted",filter:`Filter applied: ${e.textContent}`,"switch-tab":`Switched to ${e.textContent} tab`,"view-child":`Viewing ${e.dataset.id} details`}[t]||null}announceToUser(t,e="polite"){this.announce(t,e)}enhanceCard(t){this.enhanceCardAccessibility(t)}},t.injectGlobalStyles(),window.KidsTasksUtils=e,window.KidsTasksStyleManager=t,customElements.define("kids-tasks-card",h(o)),customElements.define("kids-tasks-child-card",h(d)),customElements.define("kids-tasks-card-editor",class extends c{_renderSpecificOptions(){return`\n      <div class="section-title">Options d'affichage</div>\n      <div class="option">\n        <label>Mode d'affichage</label>\n        <select class="mode-select">\n          <option value="dashboard" ${"dashboard"===this._config.mode?"selected":""}>\n            Tableau de bord\n          </option>\n          <option value="compact" ${"compact"===this._config.mode?"selected":""}>\n            Vue compacte\n          </option>\n        </select>\n      </div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-completed-toggle"\n            ${!1!==this._config.show_completed?"checked":""}\n          >\n          Afficher les tâches terminées\n        </label>\n      </div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-rewards-toggle"\n            ${!1!==this._config.show_rewards?"checked":""}\n          >\n          Afficher les récompenses\n        </label>\n      </div>\n    `}_attachSpecificListeners(){const t=this.querySelector(".mode-select"),e=this.querySelector(".show-completed-toggle"),n=this.querySelector(".show-rewards-toggle");t&&t.addEventListener("change",t=>{this._config.mode=t.target.value,this._fireConfigChanged()}),e&&e.addEventListener("change",t=>{this._config.show_completed=t.target.checked,this._fireConfigChanged()}),n&&n.addEventListener("change",t=>{this._config.show_rewards=t.target.checked,this._fireConfigChanged()})}}),customElements.define("kids-tasks-child-card-editor",class extends c{_renderSpecificOptions(){return`\n      <div class="section-title">Configuration de l'enfant</div>\n      <div class="option">\n        <label>Sélectionner un enfant</label>\n        <select class="child-select" required>\n          <option value="">-- Choisir un enfant --</option>\n          ${this._getChildren().map(t=>`\n            <option value="${t.id}" ${this._config.child_id===t.id?"selected":""}>\n              ${t.name}\n            </option>\n          `).join("")}\n        </select>\n        <div class="help-text">\n          Si aucun enfant n'apparaît, assurez-vous que l'intégration Kids Tasks Manager est configurée.\n        </div>\n      </div>\n      \n      <div class="section-title">Options d'affichage</div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-avatar-toggle"\n            ${!1!==this._config.show_avatar?"checked":""}\n          >\n          Afficher l'avatar et les informations\n        </label>\n      </div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-progress-toggle"\n            ${!1!==this._config.show_progress?"checked":""}\n          >\n          Afficher les barres de progression\n        </label>\n      </div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-rewards-toggle"\n            ${!1!==this._config.show_rewards?"checked":""}\n          >\n          Afficher l'onglet récompenses\n        </label>\n      </div>\n      <div class="option">\n        <label>\n          <input \n            type="checkbox" \n            class="show-completed-toggle"\n            ${!1!==this._config.show_completed?"checked":""}\n          >\n          Afficher l'onglet historique\n        </label>\n      </div>\n    `}_attachSpecificListeners(){const t=this.querySelector(".child-select"),e=this.querySelector(".show-avatar-toggle"),n=this.querySelector(".show-progress-toggle"),s=this.querySelector(".show-rewards-toggle"),a=this.querySelector(".show-completed-toggle");t&&t.addEventListener("change",t=>{this._config.child_id=t.target.value,this._fireConfigChanged()}),e&&e.addEventListener("change",t=>{this._config.show_avatar=t.target.checked,this._fireConfigChanged()}),n&&n.addEventListener("change",t=>{this._config.show_progress=t.target.checked,this._fireConfigChanged()}),s&&s.addEventListener("change",t=>{this._config.show_rewards=t.target.checked,this._fireConfigChanged()}),a&&a.addEventListener("change",t=>{this._config.show_completed=t.target.checked,this._fireConfigChanged()})}_getChildren(){if(!this._hass)return[];const t=[],e=this._hass.states;return Object.keys(e).forEach(n=>{if(n.startsWith("sensor.kidtasks_")&&n.endsWith("_points")){const s=e[n];s&&s.attributes&&"unavailable"!==s.state&&t.push({id:s.attributes.child_id||n.replace("sensor.kidtasks_","").replace("_points",""),name:s.attributes.friendly_name||n.replace("sensor.kidtasks_","").replace("_points","")})}}),t}}),window.customCards=window.customCards||[],window.customCards.push({type:"kids-tasks-card",name:"Kids Tasks Card",description:"Manage children's tasks and rewards with an engaging interface",preview:!0,documentationURL:"https://github.com/astrayel/kids-tasks-card"},{type:"kids-tasks-child-card",name:"Kids Tasks Child Card",description:"Individual child view for tasks and rewards",preview:!0,documentationURL:"https://github.com/astrayel/kids-tasks-card"});r.info("Kids Tasks Card v2.0.0 loaded successfully!");export{i as KidsTasksBaseCard,o as KidsTasksCard,d as KidsTasksChildCard,t as KidsTasksStyleManager,e as KidsTasksUtils};